name: "release-please"

on:
  push:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

env:
  FORCE_COLOR: true

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      tag-name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs['pr'] }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
          command: manifest
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        if: steps.release.outputs.releases_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  bump-version:
    if: needs.release-please.outputs.pr != null
    runs-on: builder
    needs:
      - release-please

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}

      - name: Get aqua version
        id: version
        run: |
          version="$(jq -r '.[]' .github/release-please/manifest.json)"
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Set cli version
        run: npm version ${{ steps.version.outputs.version }}
        working-directory: cli/cli-npm

      - name: Set api version
        run: npm version ${{ steps.version.outputs.version }}
        working-directory: api/aqua-api-npm

      - name: Set lsp version
        run: npm version ${{ steps.version.outputs.version }}
        working-directory: language-server/language-server-api-npm

      - name: Commit version bump
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: Bump aqua version to ${{ steps.version.outputs.version }}"
          branch: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          commit_user_name: fluencebot
          commit_user_email: devops@fluence.one
          commit_author: fluencebot <devops@fluence.one>

  compile:
    if: needs.release-please.outputs.release-created
    runs-on: builder
    needs: release-please
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Scala
        uses: coursier/cache-action@v6

      - name: Setup Scala
        uses: coursier/setup-action@v1
        with:
          apps: sbt

      - name: JS CLI build
        run: sbt cliJS/fullLinkJS
        env:
          BUILD_NUMBER: ${{ needs.release-please.outputs.version}}

      - name: JS API build
        run: sbt aqua-api/fullLinkJS
        env:
          BUILD_NUMBER: ${{ needs.release-please.outputs.version}}

      - name: JS LSP build
        run: sbt language-server-api/fullLinkJS
        env:
          BUILD_NUMBER: ${{ needs.release-please.outputs.version}}

      - name: Upload aqua-cli artifact
        uses: actions/upload-artifact@v3
        with:
          name: aqua-cli
          path: cli/cli/.js/target/scala-*/cli-opt/main.js

      - name: Upload aqua-api artifact
        uses: actions/upload-artifact@v3
        with:
          name: aqua-api
          path: api/aqua-api/target/scala-*/aqua-api-opt/main.js

      - name: Upload aqua-lsp artifact
        uses: actions/upload-artifact@v3
        with:
          name: aqua-lsp
          path: language-server/language-server-api/target/scala-*/language-server-api-opt/main.js

  aqua-cli:
    name: "Publish aqua-cli"
    runs-on: ubuntu-latest

    needs:
      - release-please
      - compile

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download aqua-cli artifact
        uses: actions/download-artifact@v3
        with:
          name: aqua-cli

      - run: mv scala-*/*/main.js cli/cli-npm/aqua.js

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npmjs/fluencebot token | NODE_AUTH_TOKEN

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: "cli/cli-npm/package-lock.json"
          cache: "npm"

      - name: Set version
        run: npm version ${{ needs.release-please.outputs.version }}
        working-directory: cli/cli-npm

      - run: npm i
        working-directory: cli/cli-npm

      - name: Publish to NPM registry
        run: npm publish --access public
        working-directory: cli/cli-npm

  aqua-api:
    name: "Publish aqua-api"
    runs-on: ubuntu-latest

    needs:
      - release-please
      - compile

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download aqua-api artifact
        uses: actions/download-artifact@v3
        with:
          name: aqua-api

      - run: mv scala-*/*/main.js api/aqua-api-npm/aqua-api.js

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npmjs/fluencebot token | NODE_AUTH_TOKEN

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: "api/aqua-api-npm/package-lock.json"
          cache: "npm"

      - name: Set version
        run: npm version ${{ needs.release-please.outputs.version }}
        working-directory: api/aqua-api-npm

      - run: npm i
        working-directory: api/aqua-api-npm

      - name: Publish to NPM registry
        run: npm publish --access public
        working-directory: api/aqua-api-npm

  aqua-lsp:
    name: "Publish aqua-lsp"
    runs-on: ubuntu-latest

    needs:
      - release-please
      - compile

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download aqua-lsp artifact
        uses: actions/download-artifact@v3
        with:
          name: aqua-lsp

      - run: mv scala-*/*/main.js language-server/language-server-npm/aqua-lsp-api.js

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npmjs/fluencebot token | NODE_AUTH_TOKEN

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: "language-server/language-server-npm/package-lock.json"
          cache: "npm"

      - name: Set version
        run: npm version ${{ needs.release-please.outputs.version }}
        working-directory: language-server/language-server-npm

      - run: npm i
        working-directory: language-server/language-server-npm

      - name: Publish to NPM registry
        run: npm publish --access public
        working-directory: language-server/language-server-npm
