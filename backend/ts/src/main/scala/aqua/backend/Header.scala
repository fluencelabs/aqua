package aqua.backend

object Header {

  private def oldFluenceJsImports(isJs: Boolean) = {
    val callParams =
      if (isJs) ""
      else
        "import type { CallParams$$ } from '@fluencelabs/fluence/dist/internal/compilerSupport/v4'"

    s"""import { FluencePeer } from '@fluencelabs/fluence';
       |$callParams
       |import {
       |    callFunction$$$$,
       |    registerService$$$$,
       |} from '@fluencelabs/fluence/dist/internal/compilerSupport/v4${if (isJs) ".js"
    else ""}';""".stripMargin
  }

  private def imports(isJs: Boolean) = {
    val callParams =
      if (isJs) ""
      else
        "import type { IFluenceClient as IFluenceClient$$, CallParams as CallParams$$ } from '@fluencelabs/js-client.api';"

    s"""$callParams
       |import {
       |    v5_callFunction as callFunction$$$$,
       |    v5_registerService as registerService$$$$,
       |} from '@fluencelabs/js-client.api';
    """.stripMargin
  }

  def header(isJs: Boolean, isOldFluenceJs: Boolean): String = {

    val importsStr = if (isOldFluenceJs) oldFluenceJsImports(isJs)
    else imports(isJs)

    s"""/**
       | *
       | * This file is auto-generated. Do not edit manually: changes may be erased.
       | * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
       | * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
       | * Aqua version: ${Version.version}
       | *
       | */
       |$importsStr
       |""".stripMargin
  }
}
