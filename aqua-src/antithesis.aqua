aqua Test

export streamIf, test, test2

ability Join:
  join1() -> string

ability Fork:
  fork() -> Join

func test() -> string:

  fork = () -> Join:
    in: *string
    join1 = () -> string:

      in <<- "something in nested"

      <- ""
    in <<- "something in"
    <- Join(join1)
  f = Fork(fork)

  j = f.fork()
  <- j.join1()

func fork() -> Join:
    in: *string
    out: *string
    join1 = () -> string:
      inJoin: *string
      for i <- in rec:
        inJoin <<- i
      for o <- out rec:
        inJoin <<- o
      join in!
      par join out!
      <- inJoin!
    in <<- "something in INSIDE"
    out <<- "something out INSIDE"
    <- Join(join1)

func test2() -> string:
  out: *string
  f = Fork(fork = fork)
  j <- f.fork()
  str <- j.join1()
  out <<- "something out OUTSIDE"
  <- str

func streamIf() -> string:

    on HOST_PEER_ID:
        if true:
            stream: *i8
            stream <<- 1
        else:
            stream: *i8
            stream <<- 2

        if false:
            stream: *i8
            stream <<- 3
        else:
            stream: *i8
            stream <<- 4

    stream: *string
    stream <<- "AALALALALA"

    <- stream!