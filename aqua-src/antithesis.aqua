aqua Main

use DECLARE_CONST from "declare.aqua" as Declare

export handleScope

service SomeService("wed"):
  getStr(s: string) -> string

ability SomeScope:
  someArrow(s: string) -> string
  str: string

ability SecondScope:
  arrow(s: string) -> string
  num: u32

func funcStr(s: string) -> string:
  strInFunc <- SomeService.getStr(s)
  SomeService.getStr(Declare.DECLARE_CONST)
  <- strInFunc

--
-- func diffFunc(s: string) -> string:
--   differentStr <- SomeService.different(s)
--   <- differentStr
--
-- func unit():
--   funcStr("")

-- func bbbbbbb()
--
-- func aaaaaa():
--   closure = (a: string) -> string:
--     <- SomeService.str()

func handleSecScope { SomeScope ,  SecondScope}() -> string:
  a = SomeScope.someArrow(SomeScope.str)
  <- a

func returnScope(s: string) -> SomeScope:
  SomeAb = SomeScope(someArrow = funcStr, str = s)
  <- SomeAb

func handleScope(fff: string) -> string:
  SomeAb = returnScope(fff)
  SecondAb = SecondScope(arrow = funcStr, num = 12)
  d <- handleSecScope{  SomeAb , SecondAb  }()
  <- d
