aqua A

export haveFun

service Dummy("dummy"):
    greeting(s: string) -> string

ability Job:
    run(s: string) -> string

func disrun(getJob: -> Job) -> Job:
   j <- getJob()
   <- j

func firstStream() -> string:
   brokenStream: *string

   job = () -> Job:
     run = (str: string) -> string:
       brokenStream <- Dummy.greeting(str)
       <- "run"

     <- Job(run = run)

   subnetJob <- disrun(job)
   subnetJob.run("firstStream string")
   <- brokenStream!

func secondStream() -> string:
   brokenStream: *string

   secondJob = () -> Job:
     secondRun = (str: string) -> string:
       brokenStream <- Dummy.greeting(str)
       <- "run"

     <- Job(run = secondRun)

   subnetJob <- disrun(secondJob)
   subnetJob.run("secondStream string")
   <- brokenStream!

func haveFun() -> string, string:
  res1 <- firstStream()
  res2 <- secondStream()
  <- res1, res2