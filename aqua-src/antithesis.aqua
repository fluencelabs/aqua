aqua StreamMapAbilities

export streamMapAbilityTest

service SrvA("a"):
  call(arrr: []string)

ability Streams:
  stream: *string

ability Adds:
  addToStream(s: string)

func addToStreamClosure(str: *string) -> string -> ():
  cl = func (s: string):
    SrvA.call(str)
    str <<- s
  <- cl

func addTo{Streams}() -> Adds:
  addStream = addToStreamClosure(Streams.stream)
  adds = Adds(addToStream = addStream)
  <- adds

func add{Adds}(s: string, k: string):
  Adds.addToStream(s)

func streamMapAbilityTest() -> []string:
  streamBla: *string
  ab = Streams(stream = streamBla)
  adds <- addTo{ab}()
  add{adds}("one", "1")
  cl = addToStreamClosure(streamBla)
  cl("two")
  <- streamBla