data Record:
    relay_id: []string
    peer_id: string

-- func bugLng79(arr: *Record) -> u32:
--     stream: *Record
--     for r <- arr:
--       stream <<- r
--     someone = stream[0]
--     on someone.peer_id via someone.relay_id:
--         a = 1 + 1
--     <- a

service Op1("op"):
  array_length(array: []string) -> u32
  noop()
--
-- func bugLNG63_3() -> string, u32, []u32:
--    status: *string
--    status <<- "ok"
--    stat = status!
--    num: *u32
--    num <<- 2
--    res = [Op1.array_length(status), num!]
--    <- status!, Op1.array_length(status), [Op1.array_length(status), 3, num!]

-- func emptySugar() -> *string:
--   strEmptyStream: *string
--   <- strEmptyStream

service Ser("ser"):
    getRecord: -> Record

-- func bugLng79(log: string -> ()) -> u32:
--     stream: *Record
--     stream <- Ser.getRecord()
--     someone = stream[0]
--     on someone.peer_id via someone.relay_id:
--         a = 1 + 1
--     <- a

func emptySugar(arr: []Record) -> u32:
  <- arr[1].relay_id.length