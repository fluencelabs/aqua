module Err declares Peer, Op, include

service Peer("peer"):
    is_connected: string -> bool

service Op("op"):
    identity: -> ()

data User:
    peer_id: string
    relay_id: string
    name: string

service Test("test"):
    getUserList: -> []User
    doSomething: -> bool

func include(opt: ?string) -> string:
    Peer.is_connected(opt!)
    for i <- opt:
       Peer.is_connected(i)
    <- opt!

func betterMessage(relay: string, arr: []string, opt: ?string, str: *string) -> ?string:
    on relay:
        Peer.is_connected("something")
        par isOnline <- Peer.is_connected(relay)
    par on "quray" via arr:
        Peer.is_connected("qurara")

    stream: *string

    localOpt: ?string

    if isOnline:
      try:
        Test.doSomething()
    else:
      Peer.is_connected(stream!)

    x <- include(arr)
    y <- include(opt)
    localOpt <- include(str)

    <- opt