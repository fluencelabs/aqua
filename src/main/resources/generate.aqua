service Local("local"):
    gt: u32, u32 -> bool
    onIn: string -> ()
    onBoolean: bool -> ()

func tryGen(in1: u32, in2: string) -> bool:
    on in2:
        Local.onIn(in2)
    v <- Local.gt(in1, 25)
    <- v

func generateComplex(value: string) -> bool:
    on "smth":
        Local "other"
        b <- tryGen(23, value)
        t <- tryGen(24, "should be omitted")
        Local.onIn("Should be on other")
    Local.onIn("Should be on root")
    Local.onBoolean(b)
    <- b

func genArrows(arr: string -> bool):
    arr("hi there")

func genFold(vals: []string):
    Local.onIn("hi there")
    for v <- vals:
        par on v:
            Local.onIn(v)
    Local.onBoolean(true)

func wrapGenArrows():
    on "some peer":
        genArrows(generateComplex)
    if true == false:
        generateComplex("hello there!")
    else:
        generateComplex("else do this!")
