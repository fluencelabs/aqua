aqua Test

export test, TestServiceClosureArrowCapture

service TestServiceClosureArrowCapture:
    call(s: string) -> string

ability TestAbility:
    arrow(s: string) -> string

func returnCapture() -> string -> string:
    TestServiceClosureArrowCapture "test-service"

    closure = (s: string) -> string:
        <- TestServiceClosureArrowCapture.call(s)
    
    closure1 = closure
    closure2 = closure1
    closure3 = closure2

    Ab = TestAbility(
        arrow = closure
    )

    capture = (s: string) -> string:
        s1 <- closure(s) -- capture closure
        s2 <- closure3(s1) -- capture renamed closure
        s3 <- Ab.arrow(s2) -- capture ability
        s4 <- TestServiceClosureArrowCapture.call(s3) -- capture service
        <- s4
    
    <- capture

func test(s: string) -> string:
    capture <- returnCapture()
    <- capture(s)